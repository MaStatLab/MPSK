// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// calib
Rcpp::List calib(arma::mat Y, arma::vec C, arma::mat Z, NumericVector mu_input, IntegerVector mu_dim, NumericVector mu0_input, IntegerVector mu0_dim, arma::mat S);
RcppExport SEXP _SMPK_calib(SEXP YSEXP, SEXP CSEXP, SEXP ZSEXP, SEXP mu_inputSEXP, SEXP mu_dimSEXP, SEXP mu0_inputSEXP, SEXP mu0_dimSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu_input(mu_inputSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mu_dim(mu_dimSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mu0_input(mu0_inputSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type mu0_dim(mu0_dimSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(calib(Y, C, Z, mu_input, mu_dim, mu0_input, mu0_dim, S));
    return rcpp_result_gen;
END_RCPP
}
// perturbedSNcpp
Rcpp::List perturbedSNcpp(arma::mat Y, arma::uvec C, Rcpp::List prior, Rcpp::List pmc, Rcpp::List state);
RcppExport SEXP _SMPK_perturbedSNcpp(SEXP YSEXP, SEXP CSEXP, SEXP priorSEXP, SEXP pmcSEXP, SEXP stateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type C(CSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type prior(priorSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type pmc(pmcSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type state(stateSEXP);
    rcpp_result_gen = Rcpp::wrap(perturbedSNcpp(Y, C, prior, pmc, state));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SMPK_calib", (DL_FUNC) &_SMPK_calib, 8},
    {"_SMPK_perturbedSNcpp", (DL_FUNC) &_SMPK_perturbedSNcpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_SMPK(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
